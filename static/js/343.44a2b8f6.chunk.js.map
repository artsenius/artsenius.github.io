{"version":3,"file":"static/js/343.44a2b8f6.chunk.js","mappings":"8NAGO,MAAMA,GAAWC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yIAWpBC,GAAcH,EAAAA,EAAAA,IAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0IAWvBG,GAAeL,EAAAA,EAAAA,IAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yIAWxBK,GAASP,EAAAA,EAAAA,IAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4EAsBlBO,IAZQT,EAAAA,EAAAA,IAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0MAYJF,EAAAA,EAAAA,IAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mGAUtBU,GAAUZ,EAAAA,EAAAA,IAASa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,+GASnBY,GAAOd,EAAAA,EAAAA,IAASe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yGAUFF,EAAAA,EAAAA,IAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,wI,sFCvFpC,MAAMe,EAAe,4DAERC,EAAyBC,UAClC,MAAMC,QAAiBC,MAAMC,GAC7B,IAAKF,EAASG,GAAI,CACd,MAAMC,QAAaJ,EAASI,OAC5B,IAEI,MAAMC,EAAOC,KAAKC,MAAMH,GACxB,MAAM,IAAII,MAAMH,EAAKI,SAAO,uBAAAC,OAA2BV,EAASW,QACpE,CAAE,MAAOC,GAEL,MAAM,IAAIJ,MAAMJ,GAAI,uBAAAM,OAA2BV,EAASW,QAC5D,CACJ,CACA,OAAOX,EAASK,QAGPQ,EAAgB,CACzBC,kBAAkB,GAADJ,OAAKb,EAAY,sBAClCkB,iBAAmBC,GAAU,GAAAN,OAAQb,EAAY,eAAAa,OAAcM,I,wIC2BnE,MAAMC,GAAwBC,EAAAA,GAAOC,QAAOtC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+TAOpBsC,GAASA,EAAMC,MAAMC,OAAOC,WACvCH,GAASA,EAAMC,MAAMC,OAAOlB,MAUnCoB,GAAcN,EAAAA,GAAOO,IAAGzC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6KAUxB4C,GAAcR,EAAAA,GAAOO,IAAGvC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4YACNsC,GAASA,EAAMC,MAAMC,OAAOK,QAExBP,GAASA,EAAMC,MAAMC,OAAOM,OAChCR,GAASA,EAAMC,MAAMC,OAAOO,OAUpBT,GAASA,EAAMC,MAAMC,OAAOM,QAatDE,GAAgBZ,EAAAA,GAAOO,IAAGrC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yiBACRsC,GAVDW,EAACpB,EAAgBqB,EAAgBC,EAAgBC,KACpE,GAAe,cAAXvB,GAAqC,WAAXA,EAAqB,CAC/C,GAAe,IAAXsB,GAAgBD,EAAS,EAAG,OAAOE,EAAS,kBAAoB,UACpE,GAAID,EAAS,GAAKD,EAAS,EAAG,OAAOE,EAAS,UAAY,UAC1D,GAAID,EAAS,GAAgB,IAAXD,EAAc,OAAOE,EAAS,UAAY,SAChE,CACA,OAAOA,EAAS,UAAY,WAICH,CAAeX,EAAMT,OAAQS,EAAMY,OAAQZ,EAAMa,OAAQb,EAAMe,SAenEf,GAASA,EAAMC,MAAMC,OAAOc,QAYnDC,GAAcnB,EAAAA,GAAOoB,KAAIhD,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,irBAePsC,GACmB,cAAjBA,EAAMT,QAA2C,WAAjBS,EAAMT,OACrC,yBAA2B,yBAEzCS,GAC8B,cAAjBA,EAAMT,QAA2C,WAAjBS,EAAMT,OACrC,UAAY,UAEfS,GACmB,cAAjBA,EAAMT,QAA2C,WAAjBS,EAAMT,OACrC,UAAY,WAgBjC4B,GAAcrB,EAAAA,GAAOoB,KAAI/C,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qaAQdsC,GAASA,EAAMoB,WAAa,iBAAmB,gBAU1DC,GAAsBvB,EAAAA,GAAOO,IAAGhC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,wDAKhC4D,GAAexB,EAAAA,GAAOyB,GAAEhD,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,sHASxB8D,GAAe1B,EAAAA,GAAOO,IAAG7B,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kKAWzB+D,GAAW3B,EAAAA,GAAOO,IAAGqB,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,smBA4BrBiE,IAAY7B,EAAAA,EAAAA,IAAO2B,GAAP3B,CAAgB8B,IAAAA,GAAAlE,EAAAA,EAAAA,GAAA,qIAQ5BmE,GAAiB/B,EAAAA,GAAOO,IAAGyB,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,4KACTsC,GAASA,EAAMC,MAAMC,OAAOC,WACxBH,GAASA,EAAMC,MAAMC,OAAOO,OACzCT,GAASA,EAAMoB,WAAa,SAAW,IACvCpB,GAASA,EAAMoB,WAAa,QAAU,OAGlCpB,GAASA,EAAMoB,WAAa,OAAS,KAIlDW,GAAejC,EAAAA,GAAOO,IAAG2B,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,oGAOzBuE,GAAkB1E,GAAAA,GAElB2E,IAAeC,EAAAA,EAAAA,IAAGC,IAAAA,GAAA1E,EAAAA,EAAAA,GAAA,4JACoBsC,GAASA,EAAMC,MAAMC,OAAOK,QAAeP,GAASA,EAAMC,MAAMC,OAAOO,OAAeT,GAASA,EAAMC,MAAMC,OAAOK,QAE7InC,GAAAA,IAGXiE,GAAcvC,EAAAA,GAAOO,IAAGiC,IAAAA,GAAA5E,EAAAA,EAAAA,GAAA,6UACNsC,GAASA,EAAMC,MAAMC,OAAOK,QAExBP,GAASA,EAAMC,MAAMC,OAAOM,OAEvCyB,IAYXM,GAAgBzC,EAAAA,GAAOO,IAAGmC,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,6WAERsC,GAASA,EAAMC,MAAMC,OAAOK,SAgB9CkC,GAAe3C,EAAAA,GAAOO,IAAGqC,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,0EAMzBiF,GAAqB7C,EAAAA,GAAOO,IAAGuC,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,gFAI/BwE,IAGAW,GAAqB/C,EAAAA,GAAOO,IAAGyC,IAAAA,GAAApF,EAAAA,EAAAA,GAAA,iFAG/BwE,IAIAa,GAAejD,EAAAA,GAAOO,IAAG2C,IAAAA,GAAAtF,EAAAA,EAAAA,GAAA,mKAWzBuF,GAAqBnD,EAAAA,GAAOO,IAAG6C,IAAAA,GAAAxF,EAAAA,EAAAA,GAAA,0EAM/ByF,GAAkBrD,EAAAA,GAAOO,IAAG+C,IAAAA,GAAA1F,EAAAA,EAAAA,GAAA,gFAGbsC,GAAwB,SAAfA,EAAMqD,KAAkB,MAAQ,MACxDnB,IAGAoB,GAAmBxD,EAAAA,GAAOO,IAAGkD,IAAAA,GAAA7F,EAAAA,EAAAA,GAAA,+EACtBsC,GAASA,EAAMwD,MAEtBtB,IAIAuB,GAAqBA,KAEnBC,EAAAA,GAAAA,KAACtD,GAAW,CAAC,cAAY,sBAAqBuD,SACzC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGC,IAAI,CAACC,EAAGC,KACrBJ,EAAAA,GAAAA,KAACrB,GAAW,CAAayB,MAAOA,EAAMH,UAClCI,EAAAA,GAAAA,MAACxB,GAAa,CAAAoB,SAAA,EACVI,EAAAA,GAAAA,MAACtB,GAAY,CAAAkB,SAAA,EACTD,EAAAA,GAAAA,KAACf,GAAkB,KACnBe,EAAAA,GAAAA,KAACb,GAAkB,QAEvBkB,EAAAA,GAAAA,MAAChB,GAAY,CAAAY,SAAA,EACTI,EAAAA,GAAAA,MAACd,GAAkB,CAAAU,SAAA,EACfD,EAAAA,GAAAA,KAACP,GAAe,CAACE,KAAK,UACtBK,EAAAA,GAAAA,KAACJ,GAAgB,CAACE,MAAM,aAE5BO,EAAAA,GAAAA,MAACd,GAAkB,CAAAU,SAAA,EACfD,EAAAA,GAAAA,KAACP,GAAe,CAACE,KAAK,UACtBK,EAAAA,GAAAA,KAACJ,GAAgB,CAACE,MAAM,aAE5BO,EAAAA,GAAAA,MAACd,GAAkB,CAAAU,SAAA,EACfD,EAAAA,GAAAA,KAACP,GAAe,CAACE,KAAK,UACtBK,EAAAA,GAAAA,KAACJ,GAAgB,CAACE,MAAM,oBAjBtBM,MA2B5BE,GAAyBlE,EAAAA,GAAOO,IAAG4D,IAAAA,GAAAvG,EAAAA,EAAAA,GAAA,+CACxBuE,IAGXiC,GAAqBpE,EAAAA,GAAOO,IAAG8D,IAAAA,GAAAzG,EAAAA,EAAAA,GAAA,2UAKbsC,GAASA,EAAMC,MAAMC,OAAOK,SAW9C6D,GAAqBtE,EAAAA,GAAOO,IAAGgE,IAAAA,GAAA3G,EAAAA,EAAAA,GAAA,6NAY/B4G,GAAsBxE,EAAAA,GAAOO,IAAGkE,IAAAA,GAAA7G,EAAAA,EAAAA,GAAA,gJAIhCwE,IAOAsC,GAAsB1E,EAAAA,GAAOO,IAAGoE,IAAAA,GAAA/G,EAAAA,EAAAA,GAAA,gJAIhCwE,IAOAwC,GAAqB5E,EAAAA,GAAOO,IAAGsE,IAAAA,GAAAjH,EAAAA,EAAAA,GAAA,mCAI/BkH,GAAmB9E,EAAAA,GAAOO,IAAGwE,IAAAA,GAAAnH,EAAAA,EAAAA,GAAA,oCAI7BoH,GAAoBhF,EAAAA,GAAOO,IAAG0E,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,0GAK9BwE,IAGA8C,GAAkBlF,EAAAA,GAAOO,IAAG4E,IAAAA,GAAAvH,EAAAA,EAAAA,GAAA,8GAK5BwE,IAGAgD,GAAcC,IAChB,MAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAO,IAAIG,KAAKC,eAAe,QAAS,CACpCC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,aAAc,UACfC,OAAOX,IAMRY,GAAUlG,EAAAA,GAAOO,IAAG4F,IAAAA,GAAAvI,EAAAA,EAAAA,GAAA,oRAEEsC,GAASA,EAAMC,MAAMC,OAAOc,OAIvC1C,GAAAA,IAobX4H,GAAkBpG,EAAAA,GAAOO,IAAG8F,IAAAA,GAAAzI,EAAAA,EAAAA,GAAA,wEAEjBuE,IAGXmE,GAActG,EAAAA,GAAOO,IAAGgG,IAAAA,GAAA3I,EAAAA,EAAAA,GAAA,yVAKNsC,GAASA,EAAMC,MAAMC,OAAOK,QACvCP,GAASA,EAAMC,MAAMC,OAAOlB,MAWnCsH,GAAcxG,EAAAA,GAAOO,IAAGkG,IAAAA,GAAA7I,EAAAA,EAAAA,GAAA,oJAUxB8I,GAAe1G,EAAAA,GAAOO,IAAGoG,IAAAA,GAAA/I,EAAAA,EAAAA,GAAA,wHAClBsC,GAASA,EAAMC,MAAMC,OAAOwG,eAQnCC,GAAe7G,EAAAA,GAAOO,IAAGuG,IAAAA,GAAAlJ,EAAAA,EAAAA,GAAA,+IAGlBsC,GAASA,EAAMC,MAAMC,OAAOlB,MAOnC6H,GAAc/G,EAAAA,GAAOO,IAAGyG,IAAAA,GAAApJ,EAAAA,EAAAA,GAAA,uNAYxBqJ,GAAYjH,EAAAA,GAAOO,IAAG2G,IAAAA,GAAAtJ,EAAAA,EAAAA,GAAA,wKACJsC,GAASA,EAAMC,MAAMC,OAAOK,QACvCP,GAASA,EAAMC,MAAMC,OAAOlB,MASnCiI,GAAanH,EAAAA,GAAOoH,GAAEC,IAAAA,GAAAzJ,EAAAA,EAAAA,GAAA,gPACfsC,GAASA,EAAMC,MAAMC,OAAOlB,KAGVgB,GAASA,EAAMC,MAAMC,OAAOO,QASrD2G,GAAWtH,EAAAA,GAAOO,IAAGgH,IAAAA,GAAA3J,EAAAA,EAAAA,GAAA,iRAKHsC,IACK,WAAjBA,EAAMT,QACW,WAAjBS,EAAMT,QACNS,EAAMT,OAF4BS,EAAMC,MAAMC,OAAOK,SAKzCP,GACK,WAAjBA,EAAMT,OAA4B,UACjB,WAAjBS,EAAMT,OAA4B,WAClCS,EAAMT,OAA6BS,EAAMC,MAAMC,OAAOO,QAGrDT,GAASA,EAAMC,MAAMC,OAAOlB,MAQnCsI,GAAWxH,EAAAA,GAAOO,IAAGkH,IAAAA,GAAA7J,EAAAA,EAAAA,GAAA,iQAcrB8J,GAAW1H,EAAAA,GAAOO,IAAGoH,IAAAA,GAAA/J,EAAAA,EAAAA,GAAA,oVAEdsC,GAASA,EAAMC,MAAMC,OAAOlB,KAM3BgB,GAA0B,WAAjBA,EAAMT,OAAsB,OAAS,UAGxCS,GAA0B,WAAjBA,EAAMT,OAAsB,SAAuB,WAAjBS,EAAMT,OAAsB,SAAM,GAChFS,GACgB,WAAjBA,EAAMT,OAA4B,UACjB,WAAjBS,EAAMT,OAA4B,UAC/BS,EAAMC,MAAMC,OAAOlB,MAUhC0I,GAAW5H,EAAAA,GAAOO,IAAGsH,KAAAA,IAAAjK,EAAAA,EAAAA,GAAA,6TAGdsC,GAASA,EAAMC,MAAMC,OAAOwG,eAYnCkB,GAAc9H,EAAAA,GAAOoB,KAAI2G,KAAAA,IAAAnK,EAAAA,EAAAA,GAAA,2EAMzBoK,GAAehI,EAAAA,GAAOoB,KAAI6G,KAAAA,IAAArK,EAAAA,EAAAA,GAAA,0BACnBsC,GAASA,EAAMC,MAAMC,OAAOwG,eAGnCsB,GAAUlI,EAAAA,GAAOO,IAAG4H,KAAAA,IAAAvK,EAAAA,EAAAA,GAAA,8iCAiBTK,GAAAA,IA0BXmK,GAAepI,EAAAA,GAAOO,IAAG8H,KAAAA,IAAAzK,EAAAA,EAAAA,GAAA,qDAKzB0K,GAAiBtI,EAAAA,GAAOO,IAAGgI,KAAAA,IAAA3K,EAAAA,EAAAA,GAAA,mNAY3B4K,GAAkBxI,EAAAA,GAAOO,IAAGkI,KAAAA,IAAA7K,EAAAA,EAAAA,GAAA,gFAM5B8K,GAAiB1I,EAAAA,GAAO2I,OAAMC,KAAAA,IAAAhL,EAAAA,EAAAA,GAAA,2XACZsC,GAASA,EAAMC,MAAMC,OAAOK,QACvCP,GAASA,EAAMC,MAAMC,OAAOlB,KAEjBgB,GAASA,EAAMC,MAAMC,OAAOO,OAQxBT,GAASA,EAAMC,MAAMC,OAAOyI,MAI5B3I,GAASA,EAAMC,MAAMC,OAAOyI,OAKxD,GArrB8DC,IAAiB,IAAhB,OAAE9H,GAAQ8H,EACrE,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAoB,KAC7CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAA2C,CAAC,IAC7EG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAqC,CAAC,IAC3EK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAwB,OAC3CS,EAAcC,IAAmBV,EAAAA,EAAAA,UAA+C,OAChFW,EAAOC,IAAYZ,EAAAA,EAAAA,UArBZ,IAsBPa,EAAaC,IAAkBd,EAAAA,EAAAA,WAAS,IACxCe,EAAcC,IAAmBhB,EAAAA,EAAAA,UAAiB,IACnDiB,GAAkBC,EAAAA,EAAAA,QAAuB,OAE/CC,EAAAA,EAAAA,WAAU,KACNC,EAAcT,IAEf,CAACA,IAEJ,MAAMU,GAAyBC,EAAAA,EAAAA,aAAahL,IACxC0K,EAAgB1K,GAChBiL,WAAW,IAAMP,EAAgB,IAAK,MACvC,IAEGQ,GAAgBF,EAAAA,EAAAA,aAAY,CAACG,EAA4BC,KACzC,UAAdD,EAAME,KAAiC,MAAdF,EAAME,MAC/BF,EAAMG,iBACNF,MAEL,IAEGN,EAAgBxL,UAClB0K,EA5CU,IA4CCuB,GACXf,EAAee,EA7CL,GA8CV,IACI,MAAM9L,EAAG,GAAAQ,OAAMG,EAAcC,kBAAiB,WAAAJ,OAAUsL,GAClDC,QAAanM,EAAuBI,GAC1CgK,EAAY+B,GACZtB,EAAS,KACb,CAAE,MAAOD,GACLwB,QAAQxB,MAAM,uBAAwBA,GACtCC,EAAS,6BAADjK,OAA8BgK,EAAMjK,SAAW,iBAC3D,CAAC,QACGgK,GAAW,GACXQ,GAAe,EACnB,GAGEkB,EAAmBpM,UACrB,MAAMqM,EAAUnC,EAASoC,KAAKC,GAAOA,EAAIC,MAAQvL,GAC3CwL,GAAqB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,UAAW,WAExC,GAAIrC,EAAapJ,GAAK,CAClB,MAAM0L,GAAeC,EAAAA,EAAAA,GAAA,GAAQvC,GAI7B,cAHOsC,EAAgB1L,GACvBqJ,EAAgBqC,QAChBlB,EAAuB,yBAAD9K,OAA0B8L,GAEpD,CAGAjC,EAAkBqC,IAAID,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUC,GAAI,IAAE,CAAC5L,IAAK,KAC5CwK,EAAuB,uBAAD9K,OAAwB8L,IAE9C,IACI,MAAMP,QAAanM,EAAuBe,EAAcE,iBAAiBC,IACzEqJ,EAAgBuC,IAAID,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbC,GAAI,IACP,CAAC5L,GAAKiL,KAEVT,EAAuB,sBAAD9K,OAAuB8L,EAAW,MAAA9L,OAAKuL,EAAKY,QAAQ7K,OAAM,mBAAAtB,OAAkBuL,EAAKY,QAAQ5K,OAAM,kBACzH,CAAE,MAAO6K,GACL,MAAMC,EAAe,qDACrBpC,EAASoC,GACTvB,EAAuBuB,EAC3B,CAAC,QACGxC,EAAkBqC,IACd,MAAMI,GAAIL,EAAAA,EAAAA,GAAA,GAAQC,GAElB,cADOI,EAAKhM,GACLgM,GAEf,GA0BEC,EAAmBvC,IACrB,IAAKA,EAAO,MAAO,GACnB,GAAqB,kBAAVA,EAAoB,OAAOA,EACtC,GAAqB,kBAAVA,EAAoB,CAC3B,GAAIA,EAAMjK,QAAS,OAAOiK,EAAMjK,QAChC,IACI,OAAOH,KAAK4M,UAAUxC,EAC1B,CAAE,MAAAyC,GACE,MAAO,eACX,CACJ,CACA,OAAOC,OAAO1C,IA+BlB,GAAIF,EACA,OACIrF,EAAAA,GAAAA,MAAClE,GAAqB,CAClB,cAAY,kCACZoM,KAAK,OACL,aAAW,kCACX,YAAU,OAAMtI,SAAA,EAEhBD,EAAAA,GAAAA,KAAC0E,GAAc,CACX,cAAY,uBACZ,YAAU,SACV,cAAY,OAAMzE,SACrB,mDAGDD,EAAAA,GAAAA,KAACD,GAAkB,OAK/B,GAAI6F,EACA,OACI5F,EAAAA,GAAAA,KAAC7D,GAAqB,CAClB,cAAY,gCACZoM,KAAK,OACL,aAAW,wBAAuBtI,UAElCD,EAAAA,GAAAA,KAAC3B,GAAY,CACT,cAAY,gBACZkK,KAAK,QACL,YAAU,YACVC,SAAU,EAAEvI,SAEX2F,MAMjB,MAAM6C,EAActD,EAASuD,QAAU1C,GAASA,EAzMhC,GA2MhB,OACI3F,EAAAA,GAAAA,MAAClE,GAAqB,CAClB,cAAY,0BACZoM,KAAK,OACL,aAAW,0BAAyBtI,SAAA,EAGpCD,EAAAA,GAAAA,KAAC0E,GAAc,CACXiE,IAAKrC,EACL,YAAU,SACV,cAAY,OACZ,cAAY,8BAA6BrG,SAExCmG,KAGL/F,EAAAA,GAAAA,MAAC3D,GAAW,CACR,cAAY,gBACZ6L,KAAK,OACL,gBAAA3M,OAAeuJ,EAASuD,OAAM,wBAAuBzI,SAAA,CAEpDkF,EAASjF,IAAI,CAACsH,EAAKpH,KAAK,IAAAwI,EAAAC,EAAA,OACrBxI,EAAAA,GAAAA,MAACzD,GAAW,CAER,+BAAAhB,OAA8B4L,EAAIC,KAClCc,KAAK,WAAUtI,SAAA,EAEfI,EAAAA,GAAAA,MAACrD,GAAa,CACVnB,OAAQ2L,EAAI3L,OACZqB,OAAQsK,EAAIO,QAAQ7K,OACpBC,OAAQqK,EAAIO,QAAQ5K,OACpBE,QAASD,EACT0L,QAASA,IAAMzB,EAAiBG,EAAIC,KACpCsB,UAAYjN,GAAM+K,EAAc/K,EAAG,IAAMuL,EAAiBG,EAAIC,MAC9D,iCAAA7L,OAAgC4L,EAAIC,KACpCc,KAAK,SACLC,SAAU,EACV,kBAAiBlD,EAAakC,EAAIC,QAAUjC,EAAegC,EAAIC,KAC/D,oCAAA7L,OAAmC4L,EAAIC,KACvC,qCAAA7L,OAAoC4L,EAAIC,KACxC,gBAAA7L,OAAe4L,EAAIG,QAAO,eAAA/L,OAAc4L,EAAIO,QAAQ7K,OAAM,aAAAtB,OAAY4L,EAAIO,QAAQ5K,OAAM,aAAAvB,OAAc0J,EAAakC,EAAIC,KAAO,WAAa,YAAW,6CAA4CxH,SAAA,EAElMI,EAAAA,GAAAA,MAAC1C,GAAmB,CAAAsC,SAAA,EAChBD,EAAAA,GAAAA,KAACvC,GAAW,CACRC,aAAc4H,EAAakC,EAAIC,QAAUjC,EAAegC,EAAIC,KAC5D,cAAY,OACZ,8BAAA7L,OAA6B4L,EAAIC,KAAMxH,SAC1C,YAGDD,EAAAA,GAAAA,KAACpC,GAAY,CAAC,gCAAAhC,OAA+B4L,EAAIC,KAAMxH,SAClDuH,EAAIG,cAGbtH,EAAAA,GAAAA,MAACvC,GAAY,CACT5B,GAAE,kBAAAN,OAAoB4L,EAAIC,KAC1B,gCAAA7L,OAA+B4L,EAAIC,KAAMxH,SAAA,EAEzCD,EAAAA,GAAAA,KAACzC,GAAW,CACR1B,OAAQ2L,EAAI3L,OACZ,8BAAAD,OAA6B4L,EAAIC,KACjC,wBAAA7L,OAAuB4L,EAAI3L,QAASoE,SAEnCuH,EAAI3L,UAETwE,EAAAA,GAAAA,MAACpC,GAAS,CAAC,2BAAArC,OAA0B4L,EAAIC,KAAO,2BAAA7L,OAA0B4F,GAAWgG,EAAIwB,YAAa/I,SAAA,CAAC,gBAC/FuB,GAAWgG,EAAIwB,qBAI/B3I,EAAAA,GAAAA,MAAClC,GAAc,CACXjC,GAAE,oBAAAN,OAAsB4L,EAAIC,KAC5B,kCAAA7L,OAAiC4L,EAAIC,KACrC/J,aAAc4H,EAAakC,EAAIC,QAAUjC,EAAegC,EAAIC,KAC5Dc,KAAK,SACL,oCAAA3M,OAAmC4L,EAAIC,KACvC,eAAcnC,EAAakC,EAAIC,OAASjC,EAAegC,EAAIC,KAAKxH,SAAA,CAE/DuF,EAAegC,EAAIC,OAChBzH,EAAAA,GAAAA,KAAA,OAAK,iCAAApE,OAAgC4L,EAAIC,KAAO,aAAW,uBAAsBxH,UAxLzGI,EAAAA,GAAAA,MAACC,GAAsB,CAAAL,SAAA,EACnBD,EAAAA,GAAAA,KAACQ,GAAkB,CAAAP,SACdgJ,MAAM,GAAGC,KAAK,MAAMhJ,IAAI,CAACC,EAAGC,KACzBC,EAAAA,GAAAA,MAACK,GAAkB,CAAAT,SAAA,EACfD,EAAAA,GAAAA,KAACY,GAAmB,KACpBZ,EAAAA,GAAAA,KAACc,GAAmB,MAFCV,OAMjCJ,EAAAA,GAAAA,KAACgB,GAAkB,CAAAf,SACdgJ,MAAM,GAAGC,KAAK,MAAMhJ,IAAI,CAACC,EAAGgJ,KACzB9I,EAAAA,GAAAA,MAACa,GAAgB,CAAAjB,SAAA,EACbD,EAAAA,GAAAA,KAACoB,GAAiB,IACjB6H,MAAM,GAAGC,KAAK,MAAMhJ,IAAI,CAACC,EAAGiJ,KACzBpJ,EAAAA,GAAAA,KAACsB,GAAe,GAAM8H,MAHPD,WAiLd7D,EAAakC,EAAIC,OACdpH,EAAAA,GAAAA,MAACmC,GAAe,CACZ,kCAAA5G,OAAiC4L,EAAIC,KACrCc,KAAK,WACL,oCAAA3M,OAAmC4L,EAAIC,KAAMxH,SAAA,EAE7CI,EAAAA,GAAAA,MAACqC,GAAW,CACR,8BAAA9G,OAA6B4L,EAAIC,KACjCc,KAAK,QACL,aAAW,8BAA6BtI,SAAA,EAExCI,EAAAA,GAAAA,MAACuC,GAAW,CAAC,0BAAAhH,OAAyB4L,EAAIC,KAAMxH,SAAA,EAC5CD,EAAAA,GAAAA,KAAC8C,GAAY,CAAA7C,SAAC,cACdI,EAAAA,GAAAA,MAAC4C,GAAY,CAAC,gCAAArH,QAAgC0J,EAAakC,EAAIC,KAAK4B,SAAW,KAAMC,QAAQ,GAAE,YAAWrJ,SAAA,EACpGqF,EAAakC,EAAIC,KAAK4B,SAAW,KAAMC,QAAQ,GAAG,WAG5DjJ,EAAAA,GAAAA,MAACuC,GAAW,CAAC,8BAAAhH,OAA6B4L,EAAIC,KAAMxH,SAAA,EAChDD,EAAAA,GAAAA,KAAC8C,GAAY,CAAA7C,SAAC,kBACdI,EAAAA,GAAAA,MAAC4C,GAAY,CAAC,8BAAArH,OAA6B2N,KAAKC,MAAOlE,EAAakC,EAAIC,KAAKM,QAAQ7K,QAAUoI,EAAakC,EAAIC,KAAKM,QAAQ7K,OAASoI,EAAakC,EAAIC,KAAKM,QAAQ5K,QAAW,KAAI,YAAW8C,SAAA,CACzLsJ,KAAKC,MAAOlE,EAAakC,EAAIC,KAAKM,QAAQ7K,QACtCoI,EAAakC,EAAIC,KAAKM,QAAQ7K,OAASoI,EAAakC,EAAIC,KAAKM,QAAQ5K,QAAW,KAAK,WAGlGkD,EAAAA,GAAAA,MAACuC,GAAW,CAAC,8BAAAhH,OAA6B4L,EAAIC,KAAMxH,SAAA,EAChDD,EAAAA,GAAAA,KAAC8C,GAAY,CAAA7C,SAAC,kBACdD,EAAAA,GAAAA,KAACiD,GAAY,CAAC,gBAAArH,OAAe0J,EAAakC,EAAIC,KAAKM,QAAQ7K,OAAM,iBAAgB+C,SAC5EqF,EAAakC,EAAIC,KAAKM,QAAQ7K,aAGvCmD,EAAAA,GAAAA,MAACuC,GAAW,CAAC,8BAAAhH,OAA6B4L,EAAIC,KAAMxH,SAAA,EAChDD,EAAAA,GAAAA,KAAC8C,GAAY,CAAA7C,SAAC,kBACdD,EAAAA,GAAAA,KAACiD,GAAY,CAAC,gBAAArH,OAAe0J,EAAakC,EAAIC,KAAKM,QAAQ5K,OAAM,iBAAgB8C,SAC5EqF,EAAakC,EAAIC,KAAKM,QAAQ5K,aAGvCkD,EAAAA,GAAAA,MAACuC,GAAW,CAAC,+BAAAhH,OAA8B4L,EAAIC,KAAMxH,SAAA,EACjDD,EAAAA,GAAAA,KAAC8C,GAAY,CAAA7C,SAAC,mBACdD,EAAAA,GAAAA,KAACiD,GAAY,CAAC,gBAAArH,OAAe0J,EAAakC,EAAIC,KAAKM,QAAQ0B,SAAW,EAAC,kBAAiBxJ,SACnFqF,EAAakC,EAAIC,KAAKM,QAAQ0B,SAAW,QAGlDpJ,EAAAA,GAAAA,MAACuC,GAAW,CAAC,+BAAAhH,OAA8B4L,EAAIC,KAAMxH,SAAA,EACjDD,EAAAA,GAAAA,KAAC8C,GAAY,CAAA7C,SAAC,mBACdD,EAAAA,GAAAA,KAACiD,GAAY,CAAC,gBAAArH,OAAe0J,EAAakC,EAAIC,KAAKM,QAAQ2B,SAAW,EAAC,kBAAiBzJ,SACnFqF,EAAakC,EAAIC,KAAKM,QAAQ2B,SAAW,WAItDrJ,EAAAA,GAAAA,MAAC8C,GAAW,CACR,8BAAAvH,OAA6B4L,EAAIC,KACjCc,KAAK,QACL,aAAW,+BAA8BtI,SAAA,CAEL,QAFK2I,EAExCtD,EAAakC,EAAIC,KAAKM,QAAQ4B,aAAK,IAAAf,OAAA,EAAnCA,EAAqC1I,IAAI,CAAC0J,EAAWxJ,KAClDC,EAAAA,GAAAA,MAACgD,GAAS,CACN,4BAAAzH,OAA2B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAEtCmI,KAAK,QACL,iCAAA3M,OAAgC4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAAQH,SAAA,EAEnDD,EAAAA,GAAAA,KAACuD,GAAU,CACPrH,GAAE,eAAAN,OAAiB4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAC9B,kCAAAxE,OAAiC4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAAQH,SAEnD2J,EAAKC,SAEV7J,EAAAA,GAAAA,KAAC0D,GAAQ,CACL7H,OAAQ+N,EAAK/N,OACb,2BAAAD,OAA0B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GACrCmI,KAAK,WACL,sBAAA3M,OAAqBgO,EAAKE,OAASF,EAAKG,KAAI,cAAAnO,OAAagO,EAAK/N,OAAM,eAAAD,OAAcgO,EAAKI,SAAW,WAAU,gBAAApO,OAAegO,EAAKP,SAAQ,GAAAzN,QAAOgO,EAAKP,SAAW,KAAMC,QAAQ,GAAE,YAAa,OAAQrJ,UAEpMI,EAAAA,GAAAA,MAACmE,GAAY,CAAAvE,SAAA,EACTI,EAAAA,GAAAA,MAACuD,GAAQ,CAAA3D,SAAA,EACLD,EAAAA,GAAAA,KAAC8D,GAAQ,CACLjI,OAAQ+N,EAAK/N,OACboO,aAAcA,IAAML,EAAKhE,OAASG,EAAgB,CAC9C7J,GAAG,GAADN,OAAK4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAClBwF,MAAOuC,EAAgByB,EAAKhE,SAEhCsE,aAAcA,IAAMnE,EAAgB,MACpCoE,QAASA,IAAMP,EAAKhE,OAASG,EAAgB,CACzC7J,GAAG,GAADN,OAAK4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAClBwF,MAAOuC,EAAgByB,EAAKhE,SAEhCwE,OAAQA,IAAMrE,EAAgB,MAC9B,2BAAAnK,OAA0B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GACrCoI,SAAUoB,EAAKhE,MAAQ,GAAK,EAC5B2C,KAAMqB,EAAKhE,MAAQ,cAAWyE,EAC9B,mBAAkBT,EAAKhE,MAAK,SAAAhK,OAAY4L,EAAIC,IAAG,KAAA7L,OAAIwE,QAAUiK,EAAUpK,SAEtE2J,EAAKE,OAASF,EAAKG,QAExB1J,EAAAA,GAAAA,MAAC2D,GAAQ,CAAC,2BAAApI,OAA0B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAAQH,SAAA,EACnDI,EAAAA,GAAAA,MAAC6D,GAAW,CAAC,8BAAAtI,OAA6B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAAQH,SAAA,CACvC,aAAjB2J,EAAKI,QAAyB,eAAO,eAAK,IAAEJ,EAAKI,SAAW,eAEjEhK,EAAAA,GAAAA,KAACoE,GAAY,CAAC,+BAAAxI,OAA8B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GAAQH,SAC1D2J,EAAKP,SAAQ,GAAAzN,QAAOgO,EAAKP,SAAW,KAAMC,QAAQ,GAAE,KAAM,eAI1D,OAAZxD,QAAY,IAAZA,OAAY,EAAZA,EAAc5J,MAAE,GAAAN,OAAQ4L,EAAIC,IAAG,KAAA7L,OAAIwE,KAChCJ,EAAAA,GAAAA,KAACsE,GAAO,CACJpI,GAAE,SAAAN,OAAW4L,EAAIC,IAAG,KAAA7L,OAAIwE,GACxB,+BAAAxE,OAA8B4L,EAAIC,IAAG,KAAA7L,OAAIwE,GACzCmI,KAAK,UACL,YAAU,SAAQtI,SAEjB6F,EAAaF,eArDzBxF,IA4DyB,QADpCyI,EACDvD,EAAakC,EAAIC,KAAKM,QAAQuC,eAAO,IAAAzB,OAAA,EAArCA,EAAuC3I,IAAI,CAAC2J,EAAYV,KAAkB,IAAAoB,EAAA,OACvElK,EAAAA,GAAAA,MAACgD,GAAS,CAAApD,SAAA,EACND,EAAAA,GAAAA,KAACuD,GAAU,CAAAtD,SAAE4J,EAAMA,QACP,QAD0BU,EACrCV,EAAMF,aAAK,IAAAY,OAAA,EAAXA,EAAarK,IAAI,CAAC0J,EAAWY,IAhRnDC,EAACb,EAAWxJ,EAAwBsK,KACvD1K,EAAAA,GAAAA,KAAC0D,GAAQ,CAA2B7H,OAAQ+N,EAAK/N,OAAOoE,UACpDI,EAAAA,GAAAA,MAACmE,GAAY,CAAAvE,SAAA,EACTI,EAAAA,GAAAA,MAACuD,GAAQ,CAAA3D,SAAA,EACLD,EAAAA,GAAAA,KAAC8D,GAAQ,CACLjI,OAAQ+N,EAAK/N,OACboO,aAAcA,IAAML,EAAKhE,OAASG,EAAgB,CAC9C7J,GAAG,GAADN,OAAK8O,EAAK,KAAA9O,OAAIwE,GAChBwF,MAAOuC,EAAgByB,EAAKhE,SAEhCsE,aAAcA,IAAMnE,EAAgB,MAAM9F,SAEzC2J,EAAKE,OAASF,EAAKG,QAExB1J,EAAAA,GAAAA,MAAC2D,GAAQ,CAAA/D,SAAA,EACLI,EAAAA,GAAAA,MAAC6D,GAAW,CAAAjE,SAAA,CACU,aAAjB2J,EAAKI,QAAyB,eAAO,eAAK,IAAEJ,EAAKI,SAAW,eAEjEhK,EAAAA,GAAAA,KAACoE,GAAY,CAAAnE,SAAE2J,EAAKP,SAAQ,GAAAzN,QAAOgO,EAAKP,SAAW,KAAMC,QAAQ,GAAE,KAAM,eAGpE,OAAZxD,QAAY,IAAZA,OAAY,EAAZA,EAAc5J,MAAE,GAAAN,OAAQ8O,EAAK,KAAA9O,OAAIwE,KAC9BJ,EAAAA,GAAAA,KAACsE,GAAO,CAAArE,SAAE6F,EAAaF,YAEhB,GAAAhK,OAvBD8O,EAAK,KAAA9O,OAAIwE,IAgRiBqK,CAAeb,EAAK,GAADhO,OAAKuN,EAAU,KAAAvN,OAAI4O,GAAahD,EAAIC,QAC1D,UAAA7L,OAJqBuN,iBAlLzC3B,EAAIC,QA+LfgB,GAAevC,KACblG,EAAAA,GAAAA,KAAC4E,GAAe,CAAC,cAAY,oBAAmB3E,UAC5CD,EAAAA,GAAAA,KAAC8E,GAAc,CACXgE,QAASA,KACL7C,EAAS0E,GAAKpB,KAAKqB,IAAID,EAparC,EADE,KAsaYjE,EAAuB,WAAD9K,OArapC,EAqayD,qBAE/CiP,SAAU3E,EACV,cAAY,mBACZ,aAAYA,EAAc,yBAAwB,QAAAtK,OAza5D,EAyagF,uCAAAA,OAAsCuJ,EAASuD,OAAM,cAAA9M,OA1anI,GA0a2J,aACnJ,YAAU,SAAQqE,SAEjBiG,GACG7F,EAAAA,GAAAA,MAAAyK,GAAAA,SAAA,CAAA7K,SAAA,EACID,EAAAA,GAAAA,KAACsC,GAAO,CAAC,cAAY,oBAAoB,cAAY,SAAS,gBAIlE,8B,gBCv5BhC,SAASyI,EAAQC,GAGf,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBC,QAAUD,EAAEG,cAAgBF,QAAUD,IAAMC,OAAOG,UAAY,gBAAkBJ,CACpH,EAAGD,EAAQC,EACb,CCNA,SAASK,EAAcC,GACrB,IAAIC,ECFN,SAAqBD,EAAGE,GACtB,GAAI,UAAYT,EAAQO,KAAOA,EAAG,OAAOA,EACzC,IAAIxP,EAAIwP,EAAEL,OAAOQ,aACjB,QAAI,IAAW3P,EAAG,CAChB,IAAIyP,EAAIzP,EAAE4P,KAAKJ,EAAGE,GAAK,WACvB,GAAI,UAAYT,EAAQQ,GAAI,OAAOA,EACnC,MAAM,IAAII,UAAU,+CACtB,CACA,OAAQ,WAAaH,EAAIlD,OAASsD,QAAQN,EAC5C,CDPUG,CAAYH,EAAG,UACvB,MAAO,UAAYP,EAAQQ,GAAKA,EAAIA,EAAI,EAC1C,CEJA,SAASM,EAAgB/P,EAAG0P,EAAGF,GAC7B,OAAQE,EAAIH,EAAcG,MAAO1P,EAAIgQ,OAAOC,eAAejQ,EAAG0P,EAAG,CAC/DQ,MAAOV,EACPW,YAAY,EACZC,cAAc,EACdC,UAAU,IACPrQ,EAAE0P,GAAKF,EAAGxP,CACjB,CCPA,SAASsQ,EAAQtQ,EAAG0P,GAClB,IAAIF,EAAIQ,OAAOO,KAAKvQ,GACpB,GAAIgQ,OAAOQ,sBAAuB,CAChC,IAAItB,EAAIc,OAAOQ,sBAAsBxQ,GACrC0P,IAAMR,EAAIA,EAAEuB,OAAO,SAAUf,GAC3B,OAAOM,OAAOU,yBAAyB1Q,EAAG0P,GAAGS,UAC/C,IAAKX,EAAEmB,KAAKC,MAAMpB,EAAGN,EACvB,CACA,OAAOM,CACT,CACA,SAASqB,EAAe7Q,GACtB,IAAK,IAAI0P,EAAI,EAAGA,EAAIoB,UAAUlE,OAAQ8C,IAAK,CACzC,IAAIF,EAAI,MAAQsB,UAAUpB,GAAKoB,UAAUpB,GAAK,CAAC,EAC/CA,EAAI,EAAIY,EAAQN,OAAOR,IAAI,GAAIuB,QAAQ,SAAUrB,GAC/C,EAAe1P,EAAG0P,EAAGF,EAAEE,GACzB,GAAKM,OAAOgB,0BAA4BhB,OAAOiB,iBAAiBjR,EAAGgQ,OAAOgB,0BAA0BxB,IAAMc,EAAQN,OAAOR,IAAIuB,QAAQ,SAAUrB,GAC7IM,OAAOC,eAAejQ,EAAG0P,EAAGM,OAAOU,yBAAyBlB,EAAGE,GACjE,EACF,CACA,OAAO1P,CACT,C","sources":["styles/animations.ts","config/api.ts","components/LiveTestAutomation.tsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { keyframes } from 'styled-components';\n\n// Fade and slide animations\nexport const fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const slideInLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const slideInRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const fadeIn = keyframes`\n  from { \n    opacity: 0; \n  }\n  to { \n    opacity: 1; \n  }\n`;\n\n// Pulse animations\nexport const pulse = keyframes`\n  0% {\n    box-shadow: 0 0 0 0 rgba(52, 152, 219, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(52, 152, 219, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(52, 152, 219, 0);\n  }\n`;\n\nexport const pulseScale = keyframes`\n  0%, 100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n`;\n\n// Loading animations\nexport const shimmer = keyframes`\n  0% {\n    background-position: -1200px 0;\n  }\n  100% {\n    background-position: 1200px 0;\n  }\n`;\n\nexport const spin = keyframes`\n  0% { \n    transform: rotate(0deg); \n  }\n  100% { \n    transform: rotate(360deg); \n  }\n`;\n\n// Page transition animation\nexport const pageSlideIn = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;","const API_BASE_URL = 'https://about-me-automation-backend.azurewebsites.net/api';\n\nexport const fetchWithErrorHandling = async (url: string) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        const text = await response.text();\n        try {\n            // Try to parse error as JSON\n            const json = JSON.parse(text);\n            throw new Error(json.message || `HTTP error! status: ${response.status}`);\n        } catch (e) {\n            // If parsing fails, use text or status\n            throw new Error(text || `HTTP error! status: ${response.status}`);\n        }\n    }\n    return response.json();\n};\n\nexport const API_ENDPOINTS = {\n    TEST_RUNS_SUMMARY: `${API_BASE_URL}/test-runs/summary`,\n    TEST_RUN_DETAILS: (id: string) => `${API_BASE_URL}/test-runs/${id}`\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport { API_ENDPOINTS, fetchWithErrorHandling } from '../config/api';\n\nimport { fadeInUp, fadeIn, shimmer, spin } from '../styles/animations';\n\ninterface TestRun {\n    _id: string;\n    project: string;\n    status: string;\n    startedAt: string;\n    finishedAt: string;\n    results: {\n        passed: number;\n        failed: number;\n        skipped?: number;\n        blocked?: number;\n        tests?: Array<{\n            suite: string;\n            title: string;\n            status: string;\n            browser: string;\n            duration: number;\n            error?: string;\n        }>;\n        details?: Array<{\n            suite: string;\n            tests: Array<{\n                name: string;\n                status: string;\n                browser?: string;\n                duration?: number;\n                error?: string;\n            }>;\n        }>;\n    };\n}\n\ninterface TestRunDetail extends TestRun {\n    duration: number;\n    results: TestRun['results'];\n}\n\ninterface LiveTestAutomationProps {\n    isDark: boolean;\n}\n\nconst TestAutomationSection = styled.section`\n    padding: 2rem;\n    max-width: 1200px;\n    margin: 0 auto;\n    width: 100%;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    background-color: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    transition: background-color 0.3s ease, color 0.3s ease;\n\n    @media (max-width: 768px) {\n        padding: 1rem;\n    }\n`;\n\n\n\nconst TestRunList = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    min-height: 400px;\n    width: 100%;\n    overflow-x: hidden;\n    box-sizing: border-box;\n`;\n\nconst TestRunCard = styled.div`\n    background-color: ${props => props.theme.colors.surface};\n    border-radius: 8px;\n    box-shadow: 0 2px 4px ${props => props.theme.colors.shadow};\n    border: 1px solid ${props => props.theme.colors.border};\n    overflow: hidden;\n    transition: transform 0.15s ease, box-shadow 0.15s ease;\n    \n    @media (prefers-reduced-motion: reduce) {\n        transition: none;\n    }\n    \n    &:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 4px 8px ${props => props.theme.colors.shadow};\n    }\n`;\n\nconst getStatusColor = (status: string, passed: number, failed: number, isDark: boolean) => {\n    if (status === 'completed' || status === 'passed') {\n        if (failed === 0 && passed > 0) return isDark ? 'rgb(20, 83, 45)' : '#27ae60'; // Green for all passed in dark mode\n        if (failed > 0 && passed > 0) return isDark ? '#b45309' : '#f39c12'; // Darker orange for dark mode\n        if (failed > 0 && passed === 0) return isDark ? '#b91c1c' : '#e74c3c'; // Darker red for dark mode\n    }\n    return isDark ? '#374151' : '#7f8c8d'; // Grey for other statuses\n};\n\nconst TestRunHeader = styled.div<{ status: string; passed: number; failed: number; $isDark: boolean }>`\n    background-color: ${props => getStatusColor(props.status, props.passed, props.failed, props.$isDark)};\n    color: white;\n    padding: 1.25rem;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    position: relative;\n    \n    &:hover {\n        opacity: 0.9;\n    }\n    \n    &:focus-visible {\n        outline: 3px solid ${props => props.theme.colors.accent};\n        outline-offset: 2px;\n    }\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 0.5rem;\n        padding: 1rem;\n    }\n`;\n\nconst StatusBadge = styled.span<{ status: string }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.375rem;\n    padding: 0.25rem 0.75rem;\n    border-radius: 9999px;\n    font-size: 0.75rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.025em;\n    min-width: 90px;\n    white-space: nowrap;\n    text-align: center;\n    box-sizing: border-box;\n    background-color: ${props => {\n        const isSuccess = props.status === 'completed' || props.status === 'passed';\n        return isSuccess ? 'rgba(34, 197, 94, 0.2)' : 'rgba(239, 68, 68, 0.2)';\n    }};\n    color: ${props => {\n        const isSuccess = props.status === 'completed' || props.status === 'passed';\n        return isSuccess ? '#10b981' : '#ef4444';\n    }};\n    border: 1px solid ${props => {\n        const isSuccess = props.status === 'completed' || props.status === 'passed';\n        return isSuccess ? '#10b981' : '#ef4444';\n    }};\n    \n    &::before {\n        content: '';\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n        background-color: currentColor;\n    }\n\n    @media (max-width: 768px) {\n        min-width: 80px;\n    }\n`;\n\nconst ChevronIcon = styled.span<{ isExpanded: boolean }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 0.75rem;\n    width: 20px;\n    height: 20px;\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transform: ${props => props.isExpanded ? 'rotate(180deg)' : 'rotate(0deg)'};\n    font-size: 0.875rem;\n    border-radius: 4px;\n    background-color: rgba(255, 255, 255, 0.1);\n    \n    &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n`;\n\nconst TestRunTitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst TestRunTitle = styled.h3`\n    margin: 0;\n    font-size: 1.2rem;\n\n    @media (max-width: 768px) {\n        font-size: 1rem;\n    }\n`;\n\nconst TestRunStats = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n\n    @media (max-width: 768px) {\n        flex-wrap: wrap;\n        gap: 1rem;\n    }\n`;\n\nconst StatItem = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    padding: 0.25rem 0.75rem;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 20px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    backdrop-filter: blur(4px);\n    min-width: 210px;\n    box-sizing: border-box;\n    white-space: nowrap;\n    \n    &:first-child {\n        border: 1px solid rgba(34, 197, 94, 0.3);\n    }\n    \n    &:nth-child(2) {\n        border: 1px solid rgba(239, 68, 68, 0.3);\n    }\n    \n    @media (max-width: 768px) {\n        min-width: 180px;\n    }\n`;\n\nconst DateBadge = styled(StatItem)`\n    width: 260px;\n    font-variant-numeric: tabular-nums;\n    @media (max-width: 768px) {\n        width: 260px;\n    }\n`;\n\nconst TestRunContent = styled.div<{ isExpanded: boolean }>`\n    background-color: ${props => props.theme.colors.background};\n    border-top: 1px solid ${props => props.theme.colors.border};\n    padding: ${props => props.isExpanded ? '1.5rem' : '0'};\n    display: ${props => props.isExpanded ? 'block' : 'none'};\n\n    @media (max-width: 768px) {\n        padding: ${props => props.isExpanded ? '1rem' : '0'};\n    }\n`;\n\nconst ErrorMessage = styled.div`\n    text-align: center;\n    padding: 2rem;\n    color: #e74c3c;\n    font-size: 1.2rem;\n`;\n\nconst fadeInAnimation = fadeInUp;\n\nconst shimmerStyle = css`\n    background: linear-gradient(to right, ${props => props.theme.colors.surface} 8%, ${props => props.theme.colors.border} 18%, ${props => props.theme.colors.surface} 33%);\n    background-size: 2400px 100%;\n    animation: ${shimmer} 1.5s linear infinite;\n`;\n\nconst LoadingCard = styled.div<{ index: number }>`\n    background-color: ${props => props.theme.colors.surface};\n    border-radius: 8px;\n    box-shadow: 0 2px 4px ${props => props.theme.colors.shadow};\n    overflow: hidden;\n    animation: ${fadeInAnimation} 0.3s ease forwards;\n    \n    @media (prefers-reduced-motion: reduce) {\n        animation: none;\n        opacity: 1;\n    }\n    \n    @media (max-width: 768px) {\n        height: auto;\n    }\n`;\n\nconst LoadingHeader = styled.div`\n    height: 60px;\n    background-color: ${props => props.theme.colors.surface};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    position: relative;\n\n    @media (max-width: 768px) {\n        height: auto;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 0.5rem;\n        min-height: 80px;\n    }\n`;\n\nconst LoadingTitle = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\nconst LoadingProjectIcon = styled.div`\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    ${shimmerStyle}\n`;\n\nconst LoadingProjectName = styled.div`\n    width: 120px;\n    height: 20px;\n    ${shimmerStyle}\n    border-radius: 4px;\n`;\n\nconst LoadingStats = styled.div`\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n\n    @media (max-width: 768px) {\n        flex-wrap: wrap;\n        gap: 0.75rem;\n    }\n`;\n\nconst LoadingStatWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\nconst LoadingStatIcon = styled.div<{ type: 'pass' | 'fail' | 'date' }>`\n    width: 16px;\n    height: 16px;\n    border-radius: ${props => props.type === 'date' ? '3px' : '50%'};\n    ${shimmerStyle}\n`;\n\nconst LoadingStatValue = styled.div<{ width: string }>`\n    width: ${props => props.width};\n    height: 16px;\n    ${shimmerStyle}\n    border-radius: 3px;\n`;\n\nconst LoadingPlaceholder = () => {\n    return (\n        <TestRunList data-testid=\"loading-placeholder\">\n            {[1, 2, 3, 4, 5].map((_, index) => (\n                <LoadingCard key={index} index={index}>\n                    <LoadingHeader>\n                        <LoadingTitle>\n                            <LoadingProjectIcon />\n                            <LoadingProjectName />\n                        </LoadingTitle>\n                        <LoadingStats>\n                            <LoadingStatWrapper>\n                                <LoadingStatIcon type=\"pass\" />\n                                <LoadingStatValue width=\"24px\" />\n                            </LoadingStatWrapper>\n                            <LoadingStatWrapper>\n                                <LoadingStatIcon type=\"fail\" />\n                                <LoadingStatValue width=\"24px\" />\n                            </LoadingStatWrapper>\n                            <LoadingStatWrapper>\n                                <LoadingStatIcon type=\"date\" />\n                                <LoadingStatValue width=\"120px\" />\n                            </LoadingStatWrapper>\n                        </LoadingStats>\n                    </LoadingHeader>\n                </LoadingCard>\n            ))}\n        </TestRunList>\n    );\n};\n\nconst LoadingExpandedContent = styled.div`\n    animation: ${fadeInAnimation} 0.3s ease-in-out;\n`;\n\nconst LoadingTestSummary = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${props => props.theme.colors.surface};\n    padding: 0.75rem;\n    border-radius: 6px;\n\n    @media (max-width: 768px) {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 0.75rem;\n        padding: 0.75rem;\n    }\n`;\n\nconst LoadingSummaryItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    @media (max-width: 768px) {\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n    }\n`;\n\nconst LoadingSummaryLabel = styled.div`\n    height: 0.8rem;\n    width: 60%;\n    border-radius: 4px;\n    ${shimmerStyle}\n\n    @media (max-width: 768px) {\n        width: 40%;\n    }\n`;\n\nconst LoadingSummaryValue = styled.div`\n    height: 0.9rem;\n    width: 80%;\n    border-radius: 4px;\n    ${shimmerStyle}\n\n    @media (max-width: 768px) {\n        width: 50%;\n    }\n`;\n\nconst LoadingTestDetails = styled.div`\n    margin-top: 0.5rem;\n`;\n\nconst LoadingTestSuite = styled.div`\n    margin-bottom: 1rem;\n`;\n\nconst LoadingSuiteTitle = styled.div`\n    height: 0.95rem;\n    width: 70%;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    ${shimmerStyle}\n`;\n\nconst LoadingTestCase = styled.div`\n    height: 2.5rem;\n    padding: 0.5rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    ${shimmerStyle}\n`;\n\nconst formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        timeZoneName: 'short'\n    }).format(date);\n};\n\nconst MAX_RESULTS = 30;\nconst PAGE_SIZE = 5;\n\nconst Spinner = styled.div`\n    border: 3px solid rgba(255,255,255,0.2);\n    border-top: 3px solid ${props => props.theme.colors.accent};\n    border-radius: 50%;\n    width: 1.2em;\n    height: 1.2em;\n    animation: ${spin} 0.7s linear infinite;\n    display: inline-block;\n    vertical-align: middle;\n    margin-right: 0.5em;\n`;\n\nconst LiveTestAutomation: React.FC<LiveTestAutomationProps> = ({ isDark }) => {\n    const [testRuns, setTestRuns] = useState<TestRun[]>([]);\n    const [expandedRuns, setExpandedRuns] = useState<{ [key: string]: TestRunDetail }>({});\n    const [loadingDetails, setLoadingDetails] = useState<{ [key: string]: boolean }>({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [hoveredError, setHoveredError] = useState<{ id: string; error: string } | null>(null);\n    const [limit, setLimit] = useState(PAGE_SIZE);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [announceText, setAnnounceText] = useState<string>('');\n    const announcementRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        fetchTestRuns(limit);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [limit]);\n\n    const announceToScreenReader = useCallback((message: string) => {\n        setAnnounceText(message);\n        setTimeout(() => setAnnounceText(''), 1000);\n    }, []);\n\n    const handleKeyDown = useCallback((event: React.KeyboardEvent, action: () => void) => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            action();\n        }\n    }, []);\n\n    const fetchTestRuns = async (currentLimit: number) => {\n        setLoading(currentLimit === PAGE_SIZE); // Only show main loader on first load\n        setLoadingMore(currentLimit > PAGE_SIZE); // Show loading more only for subsequent loads\n        try {\n            const url = `${API_ENDPOINTS.TEST_RUNS_SUMMARY}?limit=${currentLimit}`;\n            const data = await fetchWithErrorHandling(url);\n            setTestRuns(data);\n            setError(null);\n        } catch (error: any) {\n            console.error('Fetch error details:', error);\n            setError(`Failed to load test runs: ${error.message || 'Unknown error'}`);\n        } finally {\n            setLoading(false);\n            setLoadingMore(false);\n        }\n    };\n\n    const toggleRunDetails = async (id: string) => {\n        const testRun = testRuns.find(run => run._id === id);\n        const projectName = testRun?.project || 'test run';\n        \n        if (expandedRuns[id]) {\n            const newExpandedRuns = { ...expandedRuns };\n            delete newExpandedRuns[id];\n            setExpandedRuns(newExpandedRuns);\n            announceToScreenReader(`Collapsed details for ${projectName}`);\n            return;\n        }\n\n        // Set loading state immediately\n        setLoadingDetails(prev => ({ ...prev, [id]: true }));\n        announceToScreenReader(`Loading details for ${projectName}`);\n\n        try {\n            const data = await fetchWithErrorHandling(API_ENDPOINTS.TEST_RUN_DETAILS(id));\n            setExpandedRuns(prev => ({\n                ...prev,\n                [id]: data\n            }));\n            announceToScreenReader(`Loaded details for ${projectName}. ${data.results.passed} tests passed, ${data.results.failed} tests failed.`);\n        } catch (err) {\n            const errorMessage = 'Failed to load test run details. Please try again.';\n            setError(errorMessage);\n            announceToScreenReader(errorMessage);\n        } finally {\n            setLoadingDetails(prev => {\n                const next = { ...prev };\n                delete next[id];\n                return next;\n            });\n        }\n    };\n\n    const renderLoadingExpandedContent = () => (\n        <LoadingExpandedContent>\n            <LoadingTestSummary>\n                {Array(8).fill(null).map((_, index) => (\n                    <LoadingSummaryItem key={index}>\n                        <LoadingSummaryLabel />\n                        <LoadingSummaryValue />\n                    </LoadingSummaryItem>\n                ))}\n            </LoadingTestSummary>\n            <LoadingTestDetails>\n                {Array(3).fill(null).map((_, suiteIndex) => (\n                    <LoadingTestSuite key={suiteIndex}>\n                        <LoadingSuiteTitle />\n                        {Array(2).fill(null).map((_, caseIndex) => (\n                            <LoadingTestCase key={caseIndex} />\n                        ))}\n                    </LoadingTestSuite>\n                ))}\n            </LoadingTestDetails>\n        </LoadingExpandedContent>\n    );\n\n    const getErrorMessage = (error: any): string => {\n        if (!error) return '';\n        if (typeof error === 'string') return error;\n        if (typeof error === 'object') {\n            if (error.message) return error.message;\n            try {\n                return JSON.stringify(error);\n            } catch {\n                return 'Unknown error';\n            }\n        }\n        return String(error);\n    };\n\n    const renderTestCase = (test: any, index: string | number, runId: string) => (\n        <TestCase key={`${runId}-${index}`} status={test.status}>\n            <ErrorWrapper>\n                <TestInfo>\n                    <TestName\n                        status={test.status}\n                        onMouseEnter={() => test.error && setHoveredError({\n                            id: `${runId}-${index}`,\n                            error: getErrorMessage(test.error)\n                        })}\n                        onMouseLeave={() => setHoveredError(null)}\n                    >\n                        {test.title || test.name}\n                    </TestName>\n                    <TestMeta>\n                        <TestBrowser>\n                            {test.browser === 'chromium' ? '🌐' : '📱'} {test.browser || 'chromium'}\n                        </TestBrowser>\n                        <TestDuration>{test.duration ? `${(test.duration / 1000).toFixed(2)}s` : 'N/A'}</TestDuration>\n                    </TestMeta>\n                </TestInfo>\n                {hoveredError?.id === `${runId}-${index}` && (\n                    <Tooltip>{hoveredError.error}</Tooltip>\n                )}\n            </ErrorWrapper>\n        </TestCase>\n    );\n\n    if (loading) {\n        return (\n            <TestAutomationSection \n                data-testid=\"test-automation-section-loading\"\n                role=\"main\"\n                aria-label=\"Loading test automation results\"\n                aria-busy=\"true\"\n            >\n                <VisuallyHidden \n                    data-testid=\"loading-announcement\" \n                    aria-live=\"polite\" \n                    aria-atomic=\"true\"\n                >\n                    Loading test automation results, please wait.\n                </VisuallyHidden>\n                <LoadingPlaceholder />\n            </TestAutomationSection>\n        );\n    }\n\n    if (error) {\n        return (\n            <TestAutomationSection \n                data-testid=\"test-automation-section-error\"\n                role=\"main\"\n                aria-label=\"Test automation error\"\n            >\n                <ErrorMessage \n                    data-testid=\"error-message\"\n                    role=\"alert\"\n                    aria-live=\"assertive\"\n                    tabIndex={0}\n                >\n                    {error}\n                </ErrorMessage>\n            </TestAutomationSection>\n        );\n    }\n\n    const canLoadMore = testRuns.length >= limit && limit < MAX_RESULTS;\n\n    return (\n        <TestAutomationSection \n            data-testid=\"test-automation-section\"\n            role=\"main\"\n            aria-label=\"Test Automation Results\"\n        >\n            {/* Screen reader announcements */}\n            <VisuallyHidden\n                ref={announcementRef}\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                data-testid=\"screen-reader-announcements\"\n            >\n                {announceText}\n            </VisuallyHidden>\n\n            <TestRunList \n                data-testid=\"test-run-list\"\n                role=\"list\"\n                aria-label={`${testRuns.length} test runs available`}\n            >\n                {testRuns.map((run, index) => (\n                    <TestRunCard \n                        key={run._id} \n                        data-testid={`test-run-card-${run._id}`} \n                        role=\"listitem\"\n                    >\n                        <TestRunHeader\n                            status={run.status}\n                            passed={run.results.passed}\n                            failed={run.results.failed}\n                            $isDark={isDark}\n                            onClick={() => toggleRunDetails(run._id)}\n                            onKeyDown={(e) => handleKeyDown(e, () => toggleRunDetails(run._id))}\n                            data-testid={`test-run-header-${run._id}`}\n                            role=\"button\"\n                            tabIndex={0}\n                            aria-expanded={!!expandedRuns[run._id] || !!loadingDetails[run._id]}\n                            aria-controls={`test-run-content-${run._id}`}\n                            aria-describedby={`test-run-stats-${run._id}`}\n                            aria-label={`${run.project} test run. ${run.results.passed} passed, ${run.results.failed} failed. ${!!expandedRuns[run._id] ? 'Expanded' : 'Collapsed'}. Press Enter or Space to toggle details.`}\n                        >\n                            <TestRunTitleWrapper>\n                                <ChevronIcon \n                                    isExpanded={!!expandedRuns[run._id] || !!loadingDetails[run._id]}\n                                    aria-hidden=\"true\"\n                                    data-testid={`chevron-icon-${run._id}`}\n                                >\n                                    ▼\n                                </ChevronIcon>\n                                <TestRunTitle data-testid={`test-run-title-${run._id}`}>\n                                    {run.project}\n                                </TestRunTitle>\n                            </TestRunTitleWrapper>\n                            <TestRunStats \n                                id={`test-run-stats-${run._id}`}\n                                data-testid={`test-run-stats-${run._id}`}\n                            >\n                                <StatusBadge \n                                    status={run.status} \n                                    data-testid={`status-badge-${run._id}`}\n                                    aria-label={`Status: ${run.status}`}\n                                >\n                                    {run.status}\n                                </StatusBadge>\n                                <DateBadge data-testid={`date-stat-${run._id}`} aria-label={`Started at ${formatDate(run.startedAt)}`}>\n                                    🕒 {formatDate(run.startedAt)}\n                                </DateBadge>\n                            </TestRunStats>\n                        </TestRunHeader>\n                        <TestRunContent \n                            id={`test-run-content-${run._id}`}\n                            data-testid={`test-run-content-${run._id}`}\n                            isExpanded={!!expandedRuns[run._id] || !!loadingDetails[run._id]} \n                            role=\"region\"\n                            aria-labelledby={`test-run-title-${run._id}`}\n                            aria-hidden={!expandedRuns[run._id] && !loadingDetails[run._id]}\n                        >\n                            {loadingDetails[run._id] && (\n                                <div data-testid={`loading-details-${run._id}`} aria-label=\"Loading test details\">\n                                    {renderLoadingExpandedContent()}\n                                </div>\n                            )}\n                            {expandedRuns[run._id] && (\n                                <ExpandedContent \n                                    data-testid={`expanded-content-${run._id}`}\n                                    role=\"tabpanel\"\n                                    aria-labelledby={`test-run-title-${run._id}`}\n                                >\n                                    <TestSummary \n                                        data-testid={`test-summary-${run._id}`} \n                                        role=\"group\"\n                                        aria-label=\"Test run summary statistics\"\n                                    >\n                                        <SummaryItem data-testid={`duration-${run._id}`}>\n                                            <SummaryLabel>Duration</SummaryLabel>\n                                            <SummaryValue aria-label={`Total duration: ${(expandedRuns[run._id].duration / 1000).toFixed(2)} seconds`}>\n                                                {(expandedRuns[run._id].duration / 1000).toFixed(2)}s\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`success-rate-${run._id}`}>\n                                            <SummaryLabel>Success Rate</SummaryLabel>\n                                            <SummaryValue aria-label={`Success rate: ${Math.round((expandedRuns[run._id].results.passed / (expandedRuns[run._id].results.passed + expandedRuns[run._id].results.failed)) * 100)} percent`}>\n                                                {Math.round((expandedRuns[run._id].results.passed /\n                                                    (expandedRuns[run._id].results.passed + expandedRuns[run._id].results.failed)) * 100)}%\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`passed-tests-${run._id}`}>\n                                            <SummaryLabel>Passed Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.passed} tests passed`}>\n                                                {expandedRuns[run._id].results.passed}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`failed-tests-${run._id}`}>\n                                            <SummaryLabel>Failed Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.failed} tests failed`}>\n                                                {expandedRuns[run._id].results.failed}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`skipped-tests-${run._id}`}>\n                                            <SummaryLabel>Skipped Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.skipped || 0} tests skipped`}>\n                                                {expandedRuns[run._id].results.skipped || 0}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`blocked-tests-${run._id}`}>\n                                            <SummaryLabel>Blocked Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.blocked || 0} tests blocked`}>\n                                                {expandedRuns[run._id].results.blocked || 0}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                    </TestSummary>\n                                    <TestDetails \n                                        data-testid={`test-details-${run._id}`}\n                                        role=\"group\"\n                                        aria-label=\"Individual test case results\"\n                                    >\n                                        {expandedRuns[run._id].results.tests?.map((test: any, index: number) => (\n                                            <TestSuite \n                                                data-testid={`test-suite-${run._id}-${index}`} \n                                                key={index} \n                                                role=\"group\"\n                                                aria-labelledby={`suite-title-${run._id}-${index}`}\n                                            >\n                                                <SuiteTitle \n                                                    id={`suite-title-${run._id}-${index}`}\n                                                    data-testid={`test-suite-title-${run._id}-${index}`} \n                                                >\n                                                    {test.suite}\n                                                </SuiteTitle>\n                                                <TestCase \n                                                    status={test.status} \n                                                    data-testid={`test-case-${run._id}-${index}`}\n                                                    role=\"listitem\"\n                                                    aria-label={`Test: ${test.title || test.name}. Status: ${test.status}. Browser: ${test.browser || 'chromium'}. Duration: ${test.duration ? `${(test.duration / 1000).toFixed(2)} seconds` : 'N/A'}`}\n                                                >\n                                                    <ErrorWrapper>\n                                                        <TestInfo>\n                                                            <TestName \n                                                                status={test.status} \n                                                                onMouseEnter={() => test.error && setHoveredError({\n                                                                    id: `${run._id}-${index}`,\n                                                                    error: getErrorMessage(test.error)\n                                                                })}\n                                                                onMouseLeave={() => setHoveredError(null)}\n                                                                onFocus={() => test.error && setHoveredError({\n                                                                    id: `${run._id}-${index}`,\n                                                                    error: getErrorMessage(test.error)\n                                                                })}\n                                                                onBlur={() => setHoveredError(null)}\n                                                                data-testid={`test-name-${run._id}-${index}`}\n                                                                tabIndex={test.error ? 0 : -1}\n                                                                role={test.error ? \"button\" : undefined}\n                                                                aria-describedby={test.error ? `error-${run._id}-${index}` : undefined}\n                                                            >\n                                                                {test.title || test.name}\n                                                            </TestName>\n                                                            <TestMeta data-testid={`test-meta-${run._id}-${index}`}>\n                                                                <TestBrowser data-testid={`test-browser-${run._id}-${index}`}>\n                                                                    {test.browser === 'chromium' ? '🌐' : '📱'} {test.browser || 'chromium'}\n                                                                </TestBrowser>\n                                                                <TestDuration data-testid={`test-duration-${run._id}-${index}`}>\n                                                                    {test.duration ? `${(test.duration / 1000).toFixed(2)}s` : 'N/A'}\n                                                                </TestDuration>\n                                                            </TestMeta>\n                                                        </TestInfo>\n                                                        {hoveredError?.id === `${run._id}-${index}` && (\n                                                            <Tooltip \n                                                                id={`error-${run._id}-${index}`}\n                                                                data-testid={`error-tooltip-${run._id}-${index}`}\n                                                                role=\"tooltip\"\n                                                                aria-live=\"polite\"\n                                                            >\n                                                                {hoveredError.error}\n                                                            </Tooltip>\n                                                        )}\n                                                    </ErrorWrapper>\n                                                </TestCase>\n                                            </TestSuite>\n                                        ))}\n                                        {expandedRuns[run._id].results.details?.map((suite: any, suiteIndex: number) => (\n                                            <TestSuite key={`detail-${suiteIndex}`}>\n                                                <SuiteTitle>{suite.suite}</SuiteTitle>\n                                                {suite.tests?.map((test: any, testIndex: number) =>\n                                                    renderTestCase(test, `${suiteIndex}-${testIndex}`, run._id)\n                                                )}\n                                            </TestSuite>\n                                        ))}\n                                    </TestDetails>\n                                </ExpandedContent>\n                            )}\n                        </TestRunContent>\n                    </TestRunCard>\n                ))}\n                {(canLoadMore || loadingMore) && (\n                    <LoadMoreWrapper data-testid=\"load-more-wrapper\">\n                        <LoadMoreButton\n                            onClick={() => {\n                                setLimit(l => Math.min(l + PAGE_SIZE, MAX_RESULTS));\n                                announceToScreenReader(`Loading ${PAGE_SIZE} more test runs`);\n                            }}\n                            disabled={loadingMore}\n                            data-testid=\"load-more-button\"\n                            aria-label={loadingMore ? 'Loading more test runs' : `Load ${PAGE_SIZE} more test runs. Currently showing ${testRuns.length} of up to ${MAX_RESULTS} results.`}\n                            aria-live=\"polite\"\n                        >\n                            {loadingMore ? (\n                                <>\n                                    <Spinner data-testid=\"load-more-spinner\" aria-hidden=\"true\" />\n                                    Loading...\n                                </>\n                            ) : (\n                                'Load more results'\n                            )}\n                        </LoadMoreButton>\n                    </LoadMoreWrapper>\n                )}\n            </TestRunList>\n        </TestAutomationSection>\n    );\n};\n\nconst ExpandedContent = styled.div`\n    margin-top: 0.5rem;\n    animation: ${fadeInAnimation} 0.3s ease-in-out;\n`;\n\nconst TestSummary = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${props => props.theme.colors.surface};\n    color: ${props => props.theme.colors.text};\n    padding: 1rem;\n    border-radius: 6px;\n\n    @media (max-width: 768px) {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 0.75rem;\n        padding: 0.75rem;\n    }\n`;\n\nconst SummaryItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    @media (max-width: 768px) {\n        font-size: 0.9rem;\n    }\n`;\n\nconst SummaryLabel = styled.div`\n    color: ${props => props.theme.colors.textSecondary};\n    font-size: 0.9rem;\n\n    @media (max-width: 768px) {\n        font-size: 0.8rem;\n    }\n`;\n\nconst SummaryValue = styled.div`\n    font-size: 1.1rem;\n    font-weight: 500;\n    color: ${props => props.theme.colors.text};\n\n    @media (max-width: 768px) {\n        font-size: 0.9rem;\n    }\n`;\n\nconst TestDetails = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1rem;\n    margin-top: 1rem;\n\n    @media (max-width: 768px) {\n        grid-template-columns: 1fr;\n        gap: 0.75rem;\n    }\n`;\n\nconst TestSuite = styled.div`\n    background-color: ${props => props.theme.colors.surface};\n    color: ${props => props.theme.colors.text};\n    padding: 1rem;\n    border-radius: 6px;\n\n    @media (max-width: 768px) {\n        padding: 0.75rem;\n    }\n`;\n\nconst SuiteTitle = styled.h4`\n    color: ${props => props.theme.colors.text};\n    margin: 0 0 0.75rem;\n    font-size: 1.1rem;\n    border-bottom: 1px solid ${props => props.theme.colors.border};\n    padding-bottom: 0.5rem;\n\n    @media (max-width: 768px) {\n        font-size: 1rem;\n        margin-bottom: 0.5rem;\n    }\n`;\n\nconst TestCase = styled.div<{ status: string }>`\n    padding: 0.75rem;\n    margin: 0.5rem 0;\n    border-radius: 4px;\n    position: relative;\n    background-color: ${props => {\n        if (props.status === 'passed') return props.theme.colors.surface;\n        if (props.status === 'failed') return props.theme.colors.surface;\n        if (props.status === 'skipped') return props.theme.colors.surface;\n        return props.theme.colors.surface;\n    }};\n    border: 1px solid ${props => {\n        if (props.status === 'passed') return '#22c55e';\n        if (props.status === 'failed') return '#ef4444';\n        if (props.status === 'skipped') return props.theme.colors.border;\n        return props.theme.colors.border;\n    }};\n    color: ${props => props.theme.colors.text};\n\n    @media (max-width: 768px) {\n        padding: 0.6rem;\n        margin: 0.4rem 0;\n    }\n`;\n\nconst TestInfo = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    gap: 1rem;\n    position: relative;\n    flex-wrap: wrap;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n`;\n\nconst TestName = styled.div<{ status: string }>`\n    font-size: 0.95rem;\n    color: ${props => props.theme.colors.text};\n    flex: 1;\n    min-width: 200px;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: ${props => props.status === 'failed' ? 'help' : 'default'};\n\n    &::before {\n        content: \"${props => props.status === 'passed' ? '✓' : props.status === 'failed' ? '✘' : ''}\";\n        color: ${props => {\n            if (props.status === 'passed') return '#22c55e';\n            if (props.status === 'failed') return '#ef4444';\n            return props.theme.colors.text;\n        }};\n        font-weight: bold;\n    }\n\n    @media (max-width: 768px) {\n        font-size: 0.9rem;\n    }\n`;\n\nconst TestMeta = styled.div`\n    display: flex;\n    gap: 1rem;\n    color: ${props => props.theme.colors.textSecondary};\n    font-size: 0.9rem;\n    white-space: nowrap;\n    margin-left: auto;\n\n    @media (max-width: 768px) {\n        font-size: 0.85rem;\n        gap: 0.75rem;\n        margin-left: 1.5rem; // Align with the test name after the ✓/✘ icon\n    }\n`;\n\nconst TestBrowser = styled.span`\n    display: flex;\n    align-items: center;\n    gap: 0.25rem;\n`;\n\nconst TestDuration = styled.span`\n    color: ${props => props.theme.colors.textSecondary};\n`;\n\nconst Tooltip = styled.div`\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background-color: #fee2e2;\n    border: 1px solid #fecaca;\n    color: #dc2626;\n    padding: 0.75rem;\n    border-radius: 4px;\n    font-size: 0.85rem;\n    margin-top: 0.5rem;\n    z-index: 10;\n    white-space: pre-wrap;\n    width: 100%;\n    max-width: 100vw;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    animation: ${fadeIn} 0.2s ease-in-out;\n    max-height: calc(100vh - 300px); // Dynamic height based on viewport\n    overflow-y: auto;\n    overflow-x: hidden; // Prevent horizontal scroll\n    font-family: monospace; // Better for error messages\n\n    &::before {\n        content: '';\n        position: absolute;\n        top: -6px;\n        left: 16px;\n        width: 10px;\n        height: 10px;\n        background: #fee2e2;\n        border-left: 1px solid #fecaca;\n        border-top: 1px solid #fecaca;\n        transform: rotate(45deg);\n    }\n\n    @media (max-width: 768px) {\n        font-size: 0.8rem;\n        padding: 0.6rem;\n        width: 100%;\n    }\n`;\n\nconst ErrorWrapper = styled.div`\n    position: relative;\n    width: 100%;\n`;\n\nconst VisuallyHidden = styled.div`\n    position: absolute !important;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n`;\n\nconst LoadMoreWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1rem;\n`;\n\nconst LoadMoreButton = styled.button`\n    background-color: ${props => props.theme.colors.surface};\n    color: ${props => props.theme.colors.text};\n    padding: 0.75rem 1rem;\n    border: 1px solid ${props => props.theme.colors.border};\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 500;\n    transition: all 0.3s ease;\n\n    &:hover {\n        background-color: ${props => props.theme.colors.hover};\n    }\n\n    &:disabled {\n        background-color: ${props => props.theme.colors.hover};\n        cursor: not-allowed;\n    }\n`;\n\nexport default LiveTestAutomation;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };"],"names":["fadeInUp","keyframes","_templateObject","_taggedTemplateLiteral","slideInLeft","_templateObject2","slideInRight","_templateObject3","fadeIn","_templateObject4","pulseScale","_templateObject5","_templateObject6","shimmer","_templateObject7","spin","_templateObject8","_templateObject9","API_BASE_URL","fetchWithErrorHandling","async","response","fetch","url","ok","text","json","JSON","parse","Error","message","concat","status","e","API_ENDPOINTS","TEST_RUNS_SUMMARY","TEST_RUN_DETAILS","id","TestAutomationSection","styled","section","props","theme","colors","background","TestRunList","div","TestRunCard","surface","shadow","border","TestRunHeader","getStatusColor","passed","failed","isDark","$isDark","accent","StatusBadge","span","ChevronIcon","isExpanded","TestRunTitleWrapper","TestRunTitle","h3","TestRunStats","StatItem","_templateObject0","DateBadge","_templateObject1","TestRunContent","_templateObject10","ErrorMessage","_templateObject11","fadeInAnimation","shimmerStyle","css","_templateObject12","LoadingCard","_templateObject13","LoadingHeader","_templateObject14","LoadingTitle","_templateObject15","LoadingProjectIcon","_templateObject16","LoadingProjectName","_templateObject17","LoadingStats","_templateObject18","LoadingStatWrapper","_templateObject19","LoadingStatIcon","_templateObject20","type","LoadingStatValue","_templateObject21","width","LoadingPlaceholder","_jsx","children","map","_","index","_jsxs","LoadingExpandedContent","_templateObject22","LoadingTestSummary","_templateObject23","LoadingSummaryItem","_templateObject24","LoadingSummaryLabel","_templateObject25","LoadingSummaryValue","_templateObject26","LoadingTestDetails","_templateObject27","LoadingTestSuite","_templateObject28","LoadingSuiteTitle","_templateObject29","LoadingTestCase","_templateObject30","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZoneName","format","Spinner","_templateObject31","ExpandedContent","_templateObject32","TestSummary","_templateObject33","SummaryItem","_templateObject34","SummaryLabel","_templateObject35","textSecondary","SummaryValue","_templateObject36","TestDetails","_templateObject37","TestSuite","_templateObject38","SuiteTitle","h4","_templateObject39","TestCase","_templateObject40","TestInfo","_templateObject41","TestName","_templateObject42","TestMeta","_templateObject43","TestBrowser","_templateObject44","TestDuration","_templateObject45","Tooltip","_templateObject46","ErrorWrapper","_templateObject47","VisuallyHidden","_templateObject48","LoadMoreWrapper","_templateObject49","LoadMoreButton","button","_templateObject50","hover","_ref","testRuns","setTestRuns","useState","expandedRuns","setExpandedRuns","loadingDetails","setLoadingDetails","loading","setLoading","error","setError","hoveredError","setHoveredError","limit","setLimit","loadingMore","setLoadingMore","announceText","setAnnounceText","announcementRef","useRef","useEffect","fetchTestRuns","announceToScreenReader","useCallback","setTimeout","handleKeyDown","event","action","key","preventDefault","currentLimit","data","console","toggleRunDetails","testRun","find","run","_id","projectName","project","newExpandedRuns","_objectSpread","prev","results","err","errorMessage","next","getErrorMessage","stringify","_unused","String","role","tabIndex","canLoadMore","length","ref","_expandedRuns$run$_id","_expandedRuns$run$_id2","onClick","onKeyDown","startedAt","Array","fill","suiteIndex","caseIndex","duration","toFixed","Math","round","skipped","blocked","tests","test","suite","title","name","browser","onMouseEnter","onMouseLeave","onFocus","onBlur","undefined","details","_suite$tests","testIndex","renderTestCase","runId","l","min","disabled","_Fragment","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","toPrimitive","call","TypeError","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}